# -*- coding: utf-8 -*-
"""demo_state_machine.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m66l-OH-SfuYEuSDTxLtV_n0xDhkifXp

# In this script, I will simulate the state machine
Steps of the state machine
1. Entry into space (limit switch)
2. Boot up satellite
3. Detumble - takes in data from magnetorquers, IMU
    a. When IMU reads that angular velocity approximately equals 0, transitition to next state
4. Assess charge - takes in data from solar panels on the sides
    a. if the battery is at 95% or timeout, deploy antennas (burn wire, GPIOs)
5. If battery is greater than 50% and over Earth, use comms - takes in data from antennae, radio, magnetorquers, IMU
6. If battery is greater than 50% and velocity approximately equals 0, deploy payload - takes in data from burn wire, GPIOs
7. If battery is greater than 30%, orient payload
    a. If over Earth, deploy comms

This is meant to serve as a logical template for the future state machine.  All that needs to be changed is changing the print statements for process executions, and the lists for actual output data.
"""

# import packages
import random

# begin battery checking
seconds = 0
for time in range(0, 60):
  seconds +=1
  # take in data from magnetorquers, run detumbling process
  magnetorquer_data = random.uniform(0,10) # common values for magnetorquer output, in Newtons
  startracker_data = random.uniform(0, 400) # approximate distance from Earth in kilometers

  # kill the detumbling process when angular velocity is equal to 0
  angular_velocity = random.uniform(0, .011) # common values for cubesat output, in rad/s
  if angular_velocity == 0:
    print("kill detumbling")

  # check the battery every second
  battery = random.uniform(0, 100)
  if battery >= 95:
    # deploy antennas
    print("antennas deployed")
  if battery >= 50 and battery < 95:
    # if the satellite is over Earth, deploy comms
    if startracker_data <= 10:
      print("deploy comms")
    # if the angular velocity = 0, deploy payload
    if angular_velocity == 0:
      print("deploy payload")
  if battery <= 30 and battery < 50:
    # orient payload
    print("orient payload")
    # deploy comms
    print("deploy comms")